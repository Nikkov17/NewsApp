1) db.restaurants.find({ cuisine: "Chinese", borough: "Queens" }).count()
result: 728

2)db.restaurants.aggregate([{ $unwind: '$grades'},  {$sort: {'grades.score': -1}}, { $limit: 1}, { "$project": {"ID": "$_id", _id: 0 }} ])
result: { "ID" : ObjectId("5c102e2743090d365c89bf32") }

3) db.restaurants.update({ borough: "Manhattan"}, {$push: {"grades": {"grade": "A", "score": 7, date: ISODAte()}}}, {multi: true})
result: WriteResult({ "nMatched" : 10259, "nUpserted" : 0, "nModified" : 10259 })

4)     db.restaurants.aggregate([{$project: { grades: { $size:"$grades" }, _id: 0, name:1, element: { $arrayElemAt: ["$grades", 8 ]  } }}, {$match: { "$and": [ {"element.score":{$lt:7}}, {grades:{$gt:8}} ] }}])
	result:
{ "name" : "Silver Krust West Indian Restaurant", "grades" : 9, "element" : { "date" : ISODate("2011-04-21T00:00:00Z"), "grade" : "A", "score" : 2 } }
{ "name" : "Pure Food", "grades" : 9, "element" : { "date" : ISODate("2011-07-28T00:00:00Z"), "grade" : "P", "score" : 0 } }

5) db.restaurants.aggregate([{ $unwind: '$grades'},  {$match: { "$and": [ {'grades.grade': "B"}, {cuisine: "Seafood"}, {'grades.date': {$lt: ISODate('2014-03-01T00:00:00.0Z'), $gt: ISODate('2014-02-01T00:00:00.0Z')}} ] }}, { "$project": {borough:1, grades:1}} ])
	result:
{ "_id" : ObjectId("5c102e2943090d365c89f331"), "borough" : "Bronx", "grades" : { "date" : ISODate("2014-02-10T00:00:00Z"), "grade" : "B", "score" : 20 } }
{ "_id" : ObjectId("5c102e2943090d365c89f5a8"), "borough" : "Manhattan", "grades" : { "date" : ISODate("2014-02-12T00:00:00Z"), "grade" : "B", "score" : 17 } }
Индексы:

2.1) db.restaurants.createIndex({name: 1})
   result of explain().find(): 
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "name" : {
                                "$eq" : "Glorious Food"
                        }
                },
                "winningPlan" : {
                        "stage" : "FETCH",
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "keyPattern" : {
                                        "name" : 1
                                },
                                "indexName" : "name_1",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "name" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : false,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "name" : [
                                                "[\"Glorious Food\", \"Glorious Food\"]"
                                        ]
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-4RACHT1",
                "port" : 27017,
                "version" : "4.0.4",
                "gitVersion" : "f288a3bdf201007f3693c58e140056adf8b04839"
        },
        "ok" : 1
}

2.2) db.restaurants.dropIndex("name_1")
   result: 
	{ "nIndexesWas" : 2, "ok" : 1 }
2.3) db.restaurants.createIndex({borought: 1}, {partialFilterExpression: {"restaurant_id": "41098650"}})
   result of db.restaurants.explain().find({ restaurant_id: "41098650" }, { _id: 0, borough: 1 })
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "restaurant_id" : {
                                "$eq" : "41098650"
                        }
                },
                "winningPlan" : {
                        "stage" : "PROJECTION",
                        "transformBy" : {
                                "_id" : 0,
                                "borough" : 1
                        },
                        "inputStage" : {
                                "stage" : "COLLSCAN",
                                "filter" : {
                                        "restaurant_id" : {
                                                "$eq" : "41098650"
                                        }
                                },
                                "direction" : "forward"
                        }
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-4RACHT1",
                "port" : 27017,
                "version" : "4.0.4",
        },
        "ok" : 1
}
2.4) db.restaurants.createIndex({cuisine: 1}, {partialFilterExpression: {borough: "Staten Island"}})
WITH INDEX SCAN:
   result of db.restaurants.explain().find({ borough: "Staten Island", cuisine: "American" })
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "test.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Staten Island"
                                        }
                                },
                                {
                                        "cuisine" : {
                                                "$eq" : "American"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "FETCH",
                        "filter" : {
                                "borough" : {
                                        "$eq" : "Staten Island"
                                }
                        },
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "keyPattern" : {
                                        "cuisine" : 1
                                },
                                "indexName" : "cuisine_1",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "cuisine" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : true,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "cuisine" : [
                                                "[\"American\", \"American\"]"
                                        ]
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-4RACHT1",
                "port" : 27017,
                "version" : "4.0.4",
                "gitVersion" : "f288a3bdf201007f3693c58e140056adf8b04839"
        },
        "ok" : 1
}
WITHOUT INDEX SCAN:
   result of db.restaurants.explain().find({ borough: "Queens", cuisine: "Pizza" })
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "test.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Queens"
                                        }
                                },
                                {
                                        "cuisine" : {
                                                "$eq" : "Pizza"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        "filter" : {
                                "$and" : [
                                        {
                                                "borough" : {
                                                        "$eq" : "Queens"
                                                }
                                        },
                                        {
                                                "cuisine" : {
                                                        "$eq" : "Pizza"
                                                }
                                        }
                                ]
                        },
                        "direction" : "forward"
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-4RACHT1",
                "port" : 27017,
                "version" : "4.0.4",
                "gitVersion" : "f288a3bdf201007f3693c58e140056adf8b04839"
        },
        "ok" : 1
}
   result of db.restaurants.explain().find({ borough: "Staten Island", name: "Bagel Land" })
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "test.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Staten Island"
                                        }
                                },
                                {
                                        "name" : {
                                                "$eq" : "Bagel Land"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        "filter" : {
                                "$and" : [
                                        {
                                                "borough" : {
                                                        "$eq" : "Staten Island"
                                                }
                                        },
                                        {
                                                "name" : {
                                                        "$eq" : "Bagel Land"
                                                }
                                        }
                                ]
                        },
                        "direction" : "forward"
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-4RACHT1",
                "port" : 27017,
                "version" : "4.0.4",
                "gitVersion" : "f288a3bdf201007f3693c58e140056adf8b04839"
        },
        "ok" : 1
}
2.5) db.restaurants.createIndex({name: 1}, {_id: 0}, {element:{ $arrayElemAt: ["$grades", 8 ]}}, {$match: { "$and": [ {"element.score":{$lt:7}}, {grades:{$gt:8}} ] }})